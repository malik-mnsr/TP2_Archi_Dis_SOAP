
package com.example.client;

import com.example.exception.InvalidAgencyCredentialsException_Exception;
import com.example.exception.NoAvailabilityException_Exception;
import com.example.exception.NoOfferInThisDateException_Exception;
import com.example.exception.PersonException_Exception;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HotelServiceAvailability", targetNamespace = "http://service.example.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HotelServiceAvailability {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws NoAvailabilityException_Exception
     * @throws InvalidAgencyCredentialsException_Exception
     * @throws PersonException_Exception
     * @throws NoOfferInThisDateException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkAvailability", targetNamespace = "http://service.example.com/", className = "com.example.client.CheckAvailability")
    @ResponseWrapper(localName = "checkAvailabilityResponse", targetNamespace = "http://service.example.com/", className = "com.example.client.CheckAvailabilityResponse")
    @Action(input = "http://service.example.com/HotelServiceAvailability/checkAvailabilityRequest", output = "http://service.example.com/HotelServiceAvailability/checkAvailabilityResponse", fault = {
        @FaultAction(className = InvalidAgencyCredentialsException_Exception.class, value = "http://service.example.com/HotelServiceAvailability/checkAvailability/Fault/InvalidAgencyCredentialsException"),
        @FaultAction(className = NoAvailabilityException_Exception.class, value = "http://service.example.com/HotelServiceAvailability/checkAvailability/Fault/NoAvailabilityException"),
        @FaultAction(className = PersonException_Exception.class, value = "http://service.example.com/HotelServiceAvailability/checkAvailability/Fault/PersonException"),
        @FaultAction(className = NoOfferInThisDateException_Exception.class, value = "http://service.example.com/HotelServiceAvailability/checkAvailability/Fault/NoOfferInThisDateException")
    })
    public String checkAvailability(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        Object arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        Object arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        int arg5)
        throws InvalidAgencyCredentialsException_Exception, NoAvailabilityException_Exception, NoOfferInThisDateException_Exception, PersonException_Exception
    ;

}
